#include <iostream>
#include <string>
#include <fstream>
using namespace std;
ofstream on("C:\\temp2.txt");
int num[4][4];
bool ok[10000];
/*bool prime[10000];

void Init(){
	for (int i = 2; i < 10000;++i)
	if (!prime[i]){
		for (int j = 2; i*j < 10000; ++j)
			prime[i*j] = 1;
	}
}
bool ok(int n){
	int k = 0;
	while (n){
		k = k * 10 + n % 10;
		n /= 10;
	}
	return !prime[k];
}*/

int prime[] = { 1009, 1021, 1031, 1033, 1061, 1069, 1091,
1097, 1103, 1109, 1151, 1153, 1181, 1193,
1201, 1213, 1217, 1223, 1229, 1231, 1237,
1249, 1259, 1279, 1283, 1301, 1321, 1381,
1399, 1409, 1429, 1439, 1453, 1471, 1487,
1499, 1511, 1523, 1559, 1583, 1597, 1601,
1619, 1657, 1669, 1723, 1733, 1741, 1753,
1789, 1811, 1831, 1847, 1867, 1879, 1901,
1913, 1933, 1949, 1979, 3011, 3019, 3023,
3049, 3067, 3083, 3089, 3109, 3121, 3163,
3169, 3191, 3203, 3221, 3251, 3257, 3271,
3299, 3301, 3319, 3343, 3347, 3359, 3371,
3373, 3389, 3391, 3407, 3433, 3463, 3467,
3469, 3511, 3527, 3541, 3571, 3583, 3613,
3643, 3697, 3719, 3733, 3767, 3803, 3821,
3851, 3853, 3889, 3911, 3917, 3929, 7027,
7043, 7057, 7121, 7177, 7187, 7193, 7207,
7219, 7229, 7253, 7297, 7321, 7349, 7433,
7457, 7459, 7481, 7507, 7523, 7529, 7547,
7561, 7577, 7589, 7603, 7643, 7649, 7673,
7681, 7687, 7699, 7717, 7757, 7817, 7841,
7867, 7879, 7901, 7927, 7949, 7951, 7963,
9001, 9011, 9013, 9029, 9041, 9103, 9127,
9133, 9161, 9173, 9209, 9221, 9227, 9241,
9257, 9293, 9341, 9349, 9403, 9421, 9437,
9439, 9467, 9479, 9491, 9497, 9521, 9533,
9547, 9551, 9601, 9613, 9643, 9661, 9679,
9721, 9749, 9769, 9781, 9787, 9791, 9803,
9833, 9857, 9871, 9883, 9923, 9931, 9941,
9967 };
int Count;
bool judge(){
	int temp;
	for (int i = 0; i < 4; ++i){
		temp = 0;
		for (int j = 0; j < 4; ++j)
			temp = temp * 10 + num[j][i];
		if (!ok[temp])
			return 0;
	}
	temp = 0;
	for (int i = 0; i < 4; ++i)
		temp = temp * 10 + num[i][i];
	if (!ok[temp])
		return 0;
	temp = 0;
	for (int i = 0; i < 4; ++i)
		temp = temp * 10 + num[i][3 - i];
	return ok[temp];
}

void dfs(int k){
	for (int i = 0; i < Count; ++i){
		int temp = prime[i];
		for (int j = 3; j >= 0; --j){
			num[k][j] = temp % 10;
			temp /= 10;
		}
		if (k == 3){
			if (judge()){
				for (int i = 0; i < 4; ++i){
					for (int j = 0; j < 4; ++j)
						on << num[i][j];
					on << "\\n";
					//	printf("%d", num[i][j]);
				//	putchar('\n');
				}
				on << "\\n\\";
				on<<endl;
			}
		}
		else
			dfs(k + 1);
	}
}


int main(){
	ifstream in("C:\\temp.txt");
	
	/*Init();
	int k = 0;
	for (int i = 1000; i < 10000;++i)
	if (!prime[i] && ok(i)){
		on << i << ",";
		if (++k == 7){
			k = 0;
			on << endl;
		}
	}*/
	Count = sizeof(prime) / sizeof(prime[0]);
	for (int i = 0; i < Count; ++i)
		ok[prime[i]] = 1;
	dfs(0);

	return 0;
}



